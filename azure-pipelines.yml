## Example azure-pipelines.yml

## trigger (branch which will trigger the pipeline)
trigger:
- main

# Environment variables created for Chromatic
variables:
- group: chromatic-keys

## OS where the pipeline will run
pool:
  vmImage: 'ubuntu-latest'


stages:
- stage: Test
  displayName: Application Testing
  jobs:
  - job: ChromaticTesting
    displayName: Publish to Chromatic
    variables:
      YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn   
    steps:
    - task: Cache@0
      displayName: Install and Cache packages
      inputs:
        key: 'yarn | "$(Agent.OS)" | yarn.lock'
        restoreKeys: |
          yarn | "$(Agent.OS)"
        path: $(YARN_CACHE_FOLDER)
    - script: yarn --frozen-lockfile
      condition: ne(variables.CACHE_RESTORED, 'true')
    - task: Npm@1
      displayName: Unit testing
    - script: yarn test
    - task: Npm@1
      displayName: Publish to Chromatic
    - script: yarn chromatic --project-token=${CHROMATIC_PROJECT_TOKEN}
      

   

# jobs:
# - job: Install
#   displayName: Install and Cache Dependencies
#   variables:
#     YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
#   steps:
#   - task: Cache@2
#     inputs:
#       key: 'yarn | "$(Agent.OS)" | yarn.lock'
#       restoreKeys: |
#         yarn | "$(Agent.OS)"
#       path: $(YARN_CACHE_FOLDER)
#   - script: yarn --frozen-lockfile
#     condition: ne(variables.CACHE_RESTORED, 'true')
#     displayName: Cache Yarn packages

# - job: Test
#   displayName: Testing job
#   dependsOn: Install
#   condition: succeeded()
#   steps:
#     - script: yarn test
#       displayName: Testing

# - job: Chromatic
#   displayName: Publish to Chromatic
#   dependsOn: Install
#   condition: succeeded()
#   steps:
#   - script: yarn chromatic --project-token=${CHROMATIC_PROJECT_TOKEN}
  

